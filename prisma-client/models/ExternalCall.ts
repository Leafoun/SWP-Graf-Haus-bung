
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `ExternalCall` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model ExternalCall
 * 
 */
export type ExternalCallModel = runtime.Types.Result.DefaultSelection<Prisma.$ExternalCallPayload>

export type AggregateExternalCall = {
  _count: ExternalCallCountAggregateOutputType | null
  _avg: ExternalCallAvgAggregateOutputType | null
  _sum: ExternalCallSumAggregateOutputType | null
  _min: ExternalCallMinAggregateOutputType | null
  _max: ExternalCallMaxAggregateOutputType | null
}

export type ExternalCallAvgAggregateOutputType = {
  floor: number | null
}

export type ExternalCallSumAggregateOutputType = {
  floor: number | null
}

export type ExternalCallMinAggregateOutputType = {
  id: string | null
  floor: number | null
  direction: $Enums.Direction | null
  liftId: string | null
  createdAt: Date | null
}

export type ExternalCallMaxAggregateOutputType = {
  id: string | null
  floor: number | null
  direction: $Enums.Direction | null
  liftId: string | null
  createdAt: Date | null
}

export type ExternalCallCountAggregateOutputType = {
  id: number
  floor: number
  direction: number
  liftId: number
  createdAt: number
  _all: number
}


export type ExternalCallAvgAggregateInputType = {
  floor?: true
}

export type ExternalCallSumAggregateInputType = {
  floor?: true
}

export type ExternalCallMinAggregateInputType = {
  id?: true
  floor?: true
  direction?: true
  liftId?: true
  createdAt?: true
}

export type ExternalCallMaxAggregateInputType = {
  id?: true
  floor?: true
  direction?: true
  liftId?: true
  createdAt?: true
}

export type ExternalCallCountAggregateInputType = {
  id?: true
  floor?: true
  direction?: true
  liftId?: true
  createdAt?: true
  _all?: true
}

export type ExternalCallAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ExternalCall to aggregate.
   */
  where?: Prisma.ExternalCallWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ExternalCalls to fetch.
   */
  orderBy?: Prisma.ExternalCallOrderByWithRelationInput | Prisma.ExternalCallOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ExternalCallWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ExternalCalls from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ExternalCalls.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned ExternalCalls
  **/
  _count?: true | ExternalCallCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: ExternalCallAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: ExternalCallSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ExternalCallMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ExternalCallMaxAggregateInputType
}

export type GetExternalCallAggregateType<T extends ExternalCallAggregateArgs> = {
      [P in keyof T & keyof AggregateExternalCall]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateExternalCall[P]>
    : Prisma.GetScalarType<T[P], AggregateExternalCall[P]>
}




export type ExternalCallGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ExternalCallWhereInput
  orderBy?: Prisma.ExternalCallOrderByWithAggregationInput | Prisma.ExternalCallOrderByWithAggregationInput[]
  by: Prisma.ExternalCallScalarFieldEnum[] | Prisma.ExternalCallScalarFieldEnum
  having?: Prisma.ExternalCallScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ExternalCallCountAggregateInputType | true
  _avg?: ExternalCallAvgAggregateInputType
  _sum?: ExternalCallSumAggregateInputType
  _min?: ExternalCallMinAggregateInputType
  _max?: ExternalCallMaxAggregateInputType
}

export type ExternalCallGroupByOutputType = {
  id: string
  floor: number
  direction: $Enums.Direction
  liftId: string | null
  createdAt: Date
  _count: ExternalCallCountAggregateOutputType | null
  _avg: ExternalCallAvgAggregateOutputType | null
  _sum: ExternalCallSumAggregateOutputType | null
  _min: ExternalCallMinAggregateOutputType | null
  _max: ExternalCallMaxAggregateOutputType | null
}

type GetExternalCallGroupByPayload<T extends ExternalCallGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ExternalCallGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ExternalCallGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ExternalCallGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ExternalCallGroupByOutputType[P]>
      }
    >
  >



export type ExternalCallWhereInput = {
  AND?: Prisma.ExternalCallWhereInput | Prisma.ExternalCallWhereInput[]
  OR?: Prisma.ExternalCallWhereInput[]
  NOT?: Prisma.ExternalCallWhereInput | Prisma.ExternalCallWhereInput[]
  id?: Prisma.StringFilter<"ExternalCall"> | string
  floor?: Prisma.IntFilter<"ExternalCall"> | number
  direction?: Prisma.EnumDirectionFilter<"ExternalCall"> | $Enums.Direction
  liftId?: Prisma.StringNullableFilter<"ExternalCall"> | string | null
  createdAt?: Prisma.DateTimeFilter<"ExternalCall"> | Date | string
  Lift?: Prisma.XOR<Prisma.LiftNullableScalarRelationFilter, Prisma.LiftWhereInput> | null
}

export type ExternalCallOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  floor?: Prisma.SortOrder
  direction?: Prisma.SortOrder
  liftId?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  Lift?: Prisma.LiftOrderByWithRelationInput
}

export type ExternalCallWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.ExternalCallWhereInput | Prisma.ExternalCallWhereInput[]
  OR?: Prisma.ExternalCallWhereInput[]
  NOT?: Prisma.ExternalCallWhereInput | Prisma.ExternalCallWhereInput[]
  floor?: Prisma.IntFilter<"ExternalCall"> | number
  direction?: Prisma.EnumDirectionFilter<"ExternalCall"> | $Enums.Direction
  liftId?: Prisma.StringNullableFilter<"ExternalCall"> | string | null
  createdAt?: Prisma.DateTimeFilter<"ExternalCall"> | Date | string
  Lift?: Prisma.XOR<Prisma.LiftNullableScalarRelationFilter, Prisma.LiftWhereInput> | null
}, "id">

export type ExternalCallOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  floor?: Prisma.SortOrder
  direction?: Prisma.SortOrder
  liftId?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  _count?: Prisma.ExternalCallCountOrderByAggregateInput
  _avg?: Prisma.ExternalCallAvgOrderByAggregateInput
  _max?: Prisma.ExternalCallMaxOrderByAggregateInput
  _min?: Prisma.ExternalCallMinOrderByAggregateInput
  _sum?: Prisma.ExternalCallSumOrderByAggregateInput
}

export type ExternalCallScalarWhereWithAggregatesInput = {
  AND?: Prisma.ExternalCallScalarWhereWithAggregatesInput | Prisma.ExternalCallScalarWhereWithAggregatesInput[]
  OR?: Prisma.ExternalCallScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ExternalCallScalarWhereWithAggregatesInput | Prisma.ExternalCallScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"ExternalCall"> | string
  floor?: Prisma.IntWithAggregatesFilter<"ExternalCall"> | number
  direction?: Prisma.EnumDirectionWithAggregatesFilter<"ExternalCall"> | $Enums.Direction
  liftId?: Prisma.StringNullableWithAggregatesFilter<"ExternalCall"> | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"ExternalCall"> | Date | string
}

export type ExternalCallCreateInput = {
  id?: string
  floor: number
  direction: $Enums.Direction
  createdAt?: Date | string
  Lift?: Prisma.LiftCreateNestedOneWithoutExternalCallsInput
}

export type ExternalCallUncheckedCreateInput = {
  id?: string
  floor: number
  direction: $Enums.Direction
  liftId?: string | null
  createdAt?: Date | string
}

export type ExternalCallUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  floor?: Prisma.IntFieldUpdateOperationsInput | number
  direction?: Prisma.EnumDirectionFieldUpdateOperationsInput | $Enums.Direction
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  Lift?: Prisma.LiftUpdateOneWithoutExternalCallsNestedInput
}

export type ExternalCallUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  floor?: Prisma.IntFieldUpdateOperationsInput | number
  direction?: Prisma.EnumDirectionFieldUpdateOperationsInput | $Enums.Direction
  liftId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ExternalCallCreateManyInput = {
  id?: string
  floor: number
  direction: $Enums.Direction
  liftId?: string | null
  createdAt?: Date | string
}

export type ExternalCallUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  floor?: Prisma.IntFieldUpdateOperationsInput | number
  direction?: Prisma.EnumDirectionFieldUpdateOperationsInput | $Enums.Direction
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ExternalCallUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  floor?: Prisma.IntFieldUpdateOperationsInput | number
  direction?: Prisma.EnumDirectionFieldUpdateOperationsInput | $Enums.Direction
  liftId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ExternalCallListRelationFilter = {
  every?: Prisma.ExternalCallWhereInput
  some?: Prisma.ExternalCallWhereInput
  none?: Prisma.ExternalCallWhereInput
}

export type ExternalCallOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type ExternalCallCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  floor?: Prisma.SortOrder
  direction?: Prisma.SortOrder
  liftId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type ExternalCallAvgOrderByAggregateInput = {
  floor?: Prisma.SortOrder
}

export type ExternalCallMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  floor?: Prisma.SortOrder
  direction?: Prisma.SortOrder
  liftId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type ExternalCallMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  floor?: Prisma.SortOrder
  direction?: Prisma.SortOrder
  liftId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type ExternalCallSumOrderByAggregateInput = {
  floor?: Prisma.SortOrder
}

export type ExternalCallCreateNestedManyWithoutLiftInput = {
  create?: Prisma.XOR<Prisma.ExternalCallCreateWithoutLiftInput, Prisma.ExternalCallUncheckedCreateWithoutLiftInput> | Prisma.ExternalCallCreateWithoutLiftInput[] | Prisma.ExternalCallUncheckedCreateWithoutLiftInput[]
  connectOrCreate?: Prisma.ExternalCallCreateOrConnectWithoutLiftInput | Prisma.ExternalCallCreateOrConnectWithoutLiftInput[]
  createMany?: Prisma.ExternalCallCreateManyLiftInputEnvelope
  connect?: Prisma.ExternalCallWhereUniqueInput | Prisma.ExternalCallWhereUniqueInput[]
}

export type ExternalCallUncheckedCreateNestedManyWithoutLiftInput = {
  create?: Prisma.XOR<Prisma.ExternalCallCreateWithoutLiftInput, Prisma.ExternalCallUncheckedCreateWithoutLiftInput> | Prisma.ExternalCallCreateWithoutLiftInput[] | Prisma.ExternalCallUncheckedCreateWithoutLiftInput[]
  connectOrCreate?: Prisma.ExternalCallCreateOrConnectWithoutLiftInput | Prisma.ExternalCallCreateOrConnectWithoutLiftInput[]
  createMany?: Prisma.ExternalCallCreateManyLiftInputEnvelope
  connect?: Prisma.ExternalCallWhereUniqueInput | Prisma.ExternalCallWhereUniqueInput[]
}

export type ExternalCallUpdateManyWithoutLiftNestedInput = {
  create?: Prisma.XOR<Prisma.ExternalCallCreateWithoutLiftInput, Prisma.ExternalCallUncheckedCreateWithoutLiftInput> | Prisma.ExternalCallCreateWithoutLiftInput[] | Prisma.ExternalCallUncheckedCreateWithoutLiftInput[]
  connectOrCreate?: Prisma.ExternalCallCreateOrConnectWithoutLiftInput | Prisma.ExternalCallCreateOrConnectWithoutLiftInput[]
  upsert?: Prisma.ExternalCallUpsertWithWhereUniqueWithoutLiftInput | Prisma.ExternalCallUpsertWithWhereUniqueWithoutLiftInput[]
  createMany?: Prisma.ExternalCallCreateManyLiftInputEnvelope
  set?: Prisma.ExternalCallWhereUniqueInput | Prisma.ExternalCallWhereUniqueInput[]
  disconnect?: Prisma.ExternalCallWhereUniqueInput | Prisma.ExternalCallWhereUniqueInput[]
  delete?: Prisma.ExternalCallWhereUniqueInput | Prisma.ExternalCallWhereUniqueInput[]
  connect?: Prisma.ExternalCallWhereUniqueInput | Prisma.ExternalCallWhereUniqueInput[]
  update?: Prisma.ExternalCallUpdateWithWhereUniqueWithoutLiftInput | Prisma.ExternalCallUpdateWithWhereUniqueWithoutLiftInput[]
  updateMany?: Prisma.ExternalCallUpdateManyWithWhereWithoutLiftInput | Prisma.ExternalCallUpdateManyWithWhereWithoutLiftInput[]
  deleteMany?: Prisma.ExternalCallScalarWhereInput | Prisma.ExternalCallScalarWhereInput[]
}

export type ExternalCallUncheckedUpdateManyWithoutLiftNestedInput = {
  create?: Prisma.XOR<Prisma.ExternalCallCreateWithoutLiftInput, Prisma.ExternalCallUncheckedCreateWithoutLiftInput> | Prisma.ExternalCallCreateWithoutLiftInput[] | Prisma.ExternalCallUncheckedCreateWithoutLiftInput[]
  connectOrCreate?: Prisma.ExternalCallCreateOrConnectWithoutLiftInput | Prisma.ExternalCallCreateOrConnectWithoutLiftInput[]
  upsert?: Prisma.ExternalCallUpsertWithWhereUniqueWithoutLiftInput | Prisma.ExternalCallUpsertWithWhereUniqueWithoutLiftInput[]
  createMany?: Prisma.ExternalCallCreateManyLiftInputEnvelope
  set?: Prisma.ExternalCallWhereUniqueInput | Prisma.ExternalCallWhereUniqueInput[]
  disconnect?: Prisma.ExternalCallWhereUniqueInput | Prisma.ExternalCallWhereUniqueInput[]
  delete?: Prisma.ExternalCallWhereUniqueInput | Prisma.ExternalCallWhereUniqueInput[]
  connect?: Prisma.ExternalCallWhereUniqueInput | Prisma.ExternalCallWhereUniqueInput[]
  update?: Prisma.ExternalCallUpdateWithWhereUniqueWithoutLiftInput | Prisma.ExternalCallUpdateWithWhereUniqueWithoutLiftInput[]
  updateMany?: Prisma.ExternalCallUpdateManyWithWhereWithoutLiftInput | Prisma.ExternalCallUpdateManyWithWhereWithoutLiftInput[]
  deleteMany?: Prisma.ExternalCallScalarWhereInput | Prisma.ExternalCallScalarWhereInput[]
}

export type EnumDirectionFieldUpdateOperationsInput = {
  set?: $Enums.Direction
}

export type NullableStringFieldUpdateOperationsInput = {
  set?: string | null
}

export type ExternalCallCreateWithoutLiftInput = {
  id?: string
  floor: number
  direction: $Enums.Direction
  createdAt?: Date | string
}

export type ExternalCallUncheckedCreateWithoutLiftInput = {
  id?: string
  floor: number
  direction: $Enums.Direction
  createdAt?: Date | string
}

export type ExternalCallCreateOrConnectWithoutLiftInput = {
  where: Prisma.ExternalCallWhereUniqueInput
  create: Prisma.XOR<Prisma.ExternalCallCreateWithoutLiftInput, Prisma.ExternalCallUncheckedCreateWithoutLiftInput>
}

export type ExternalCallCreateManyLiftInputEnvelope = {
  data: Prisma.ExternalCallCreateManyLiftInput | Prisma.ExternalCallCreateManyLiftInput[]
}

export type ExternalCallUpsertWithWhereUniqueWithoutLiftInput = {
  where: Prisma.ExternalCallWhereUniqueInput
  update: Prisma.XOR<Prisma.ExternalCallUpdateWithoutLiftInput, Prisma.ExternalCallUncheckedUpdateWithoutLiftInput>
  create: Prisma.XOR<Prisma.ExternalCallCreateWithoutLiftInput, Prisma.ExternalCallUncheckedCreateWithoutLiftInput>
}

export type ExternalCallUpdateWithWhereUniqueWithoutLiftInput = {
  where: Prisma.ExternalCallWhereUniqueInput
  data: Prisma.XOR<Prisma.ExternalCallUpdateWithoutLiftInput, Prisma.ExternalCallUncheckedUpdateWithoutLiftInput>
}

export type ExternalCallUpdateManyWithWhereWithoutLiftInput = {
  where: Prisma.ExternalCallScalarWhereInput
  data: Prisma.XOR<Prisma.ExternalCallUpdateManyMutationInput, Prisma.ExternalCallUncheckedUpdateManyWithoutLiftInput>
}

export type ExternalCallScalarWhereInput = {
  AND?: Prisma.ExternalCallScalarWhereInput | Prisma.ExternalCallScalarWhereInput[]
  OR?: Prisma.ExternalCallScalarWhereInput[]
  NOT?: Prisma.ExternalCallScalarWhereInput | Prisma.ExternalCallScalarWhereInput[]
  id?: Prisma.StringFilter<"ExternalCall"> | string
  floor?: Prisma.IntFilter<"ExternalCall"> | number
  direction?: Prisma.EnumDirectionFilter<"ExternalCall"> | $Enums.Direction
  liftId?: Prisma.StringNullableFilter<"ExternalCall"> | string | null
  createdAt?: Prisma.DateTimeFilter<"ExternalCall"> | Date | string
}

export type ExternalCallCreateManyLiftInput = {
  id?: string
  floor: number
  direction: $Enums.Direction
  createdAt?: Date | string
}

export type ExternalCallUpdateWithoutLiftInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  floor?: Prisma.IntFieldUpdateOperationsInput | number
  direction?: Prisma.EnumDirectionFieldUpdateOperationsInput | $Enums.Direction
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ExternalCallUncheckedUpdateWithoutLiftInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  floor?: Prisma.IntFieldUpdateOperationsInput | number
  direction?: Prisma.EnumDirectionFieldUpdateOperationsInput | $Enums.Direction
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ExternalCallUncheckedUpdateManyWithoutLiftInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  floor?: Prisma.IntFieldUpdateOperationsInput | number
  direction?: Prisma.EnumDirectionFieldUpdateOperationsInput | $Enums.Direction
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type ExternalCallSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  floor?: boolean
  direction?: boolean
  liftId?: boolean
  createdAt?: boolean
  Lift?: boolean | Prisma.ExternalCall$LiftArgs<ExtArgs>
}, ExtArgs["result"]["externalCall"]>

export type ExternalCallSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  floor?: boolean
  direction?: boolean
  liftId?: boolean
  createdAt?: boolean
  Lift?: boolean | Prisma.ExternalCall$LiftArgs<ExtArgs>
}, ExtArgs["result"]["externalCall"]>

export type ExternalCallSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  floor?: boolean
  direction?: boolean
  liftId?: boolean
  createdAt?: boolean
  Lift?: boolean | Prisma.ExternalCall$LiftArgs<ExtArgs>
}, ExtArgs["result"]["externalCall"]>

export type ExternalCallSelectScalar = {
  id?: boolean
  floor?: boolean
  direction?: boolean
  liftId?: boolean
  createdAt?: boolean
}

export type ExternalCallOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "floor" | "direction" | "liftId" | "createdAt", ExtArgs["result"]["externalCall"]>
export type ExternalCallInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Lift?: boolean | Prisma.ExternalCall$LiftArgs<ExtArgs>
}
export type ExternalCallIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Lift?: boolean | Prisma.ExternalCall$LiftArgs<ExtArgs>
}
export type ExternalCallIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Lift?: boolean | Prisma.ExternalCall$LiftArgs<ExtArgs>
}

export type $ExternalCallPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "ExternalCall"
  objects: {
    Lift: Prisma.$LiftPayload<ExtArgs> | null
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    floor: number
    direction: $Enums.Direction
    liftId: string | null
    createdAt: Date
  }, ExtArgs["result"]["externalCall"]>
  composites: {}
}

export type ExternalCallGetPayload<S extends boolean | null | undefined | ExternalCallDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ExternalCallPayload, S>

export type ExternalCallCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ExternalCallFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ExternalCallCountAggregateInputType | true
  }

export interface ExternalCallDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ExternalCall'], meta: { name: 'ExternalCall' } }
  /**
   * Find zero or one ExternalCall that matches the filter.
   * @param {ExternalCallFindUniqueArgs} args - Arguments to find a ExternalCall
   * @example
   * // Get one ExternalCall
   * const externalCall = await prisma.externalCall.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ExternalCallFindUniqueArgs>(args: Prisma.SelectSubset<T, ExternalCallFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ExternalCallClient<runtime.Types.Result.GetResult<Prisma.$ExternalCallPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one ExternalCall that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ExternalCallFindUniqueOrThrowArgs} args - Arguments to find a ExternalCall
   * @example
   * // Get one ExternalCall
   * const externalCall = await prisma.externalCall.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ExternalCallFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ExternalCallFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ExternalCallClient<runtime.Types.Result.GetResult<Prisma.$ExternalCallPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ExternalCall that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ExternalCallFindFirstArgs} args - Arguments to find a ExternalCall
   * @example
   * // Get one ExternalCall
   * const externalCall = await prisma.externalCall.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ExternalCallFindFirstArgs>(args?: Prisma.SelectSubset<T, ExternalCallFindFirstArgs<ExtArgs>>): Prisma.Prisma__ExternalCallClient<runtime.Types.Result.GetResult<Prisma.$ExternalCallPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ExternalCall that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ExternalCallFindFirstOrThrowArgs} args - Arguments to find a ExternalCall
   * @example
   * // Get one ExternalCall
   * const externalCall = await prisma.externalCall.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ExternalCallFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ExternalCallFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ExternalCallClient<runtime.Types.Result.GetResult<Prisma.$ExternalCallPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more ExternalCalls that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ExternalCallFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all ExternalCalls
   * const externalCalls = await prisma.externalCall.findMany()
   * 
   * // Get first 10 ExternalCalls
   * const externalCalls = await prisma.externalCall.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const externalCallWithIdOnly = await prisma.externalCall.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ExternalCallFindManyArgs>(args?: Prisma.SelectSubset<T, ExternalCallFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ExternalCallPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a ExternalCall.
   * @param {ExternalCallCreateArgs} args - Arguments to create a ExternalCall.
   * @example
   * // Create one ExternalCall
   * const ExternalCall = await prisma.externalCall.create({
   *   data: {
   *     // ... data to create a ExternalCall
   *   }
   * })
   * 
   */
  create<T extends ExternalCallCreateArgs>(args: Prisma.SelectSubset<T, ExternalCallCreateArgs<ExtArgs>>): Prisma.Prisma__ExternalCallClient<runtime.Types.Result.GetResult<Prisma.$ExternalCallPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many ExternalCalls.
   * @param {ExternalCallCreateManyArgs} args - Arguments to create many ExternalCalls.
   * @example
   * // Create many ExternalCalls
   * const externalCall = await prisma.externalCall.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ExternalCallCreateManyArgs>(args?: Prisma.SelectSubset<T, ExternalCallCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many ExternalCalls and returns the data saved in the database.
   * @param {ExternalCallCreateManyAndReturnArgs} args - Arguments to create many ExternalCalls.
   * @example
   * // Create many ExternalCalls
   * const externalCall = await prisma.externalCall.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many ExternalCalls and only return the `id`
   * const externalCallWithIdOnly = await prisma.externalCall.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ExternalCallCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ExternalCallCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ExternalCallPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a ExternalCall.
   * @param {ExternalCallDeleteArgs} args - Arguments to delete one ExternalCall.
   * @example
   * // Delete one ExternalCall
   * const ExternalCall = await prisma.externalCall.delete({
   *   where: {
   *     // ... filter to delete one ExternalCall
   *   }
   * })
   * 
   */
  delete<T extends ExternalCallDeleteArgs>(args: Prisma.SelectSubset<T, ExternalCallDeleteArgs<ExtArgs>>): Prisma.Prisma__ExternalCallClient<runtime.Types.Result.GetResult<Prisma.$ExternalCallPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one ExternalCall.
   * @param {ExternalCallUpdateArgs} args - Arguments to update one ExternalCall.
   * @example
   * // Update one ExternalCall
   * const externalCall = await prisma.externalCall.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ExternalCallUpdateArgs>(args: Prisma.SelectSubset<T, ExternalCallUpdateArgs<ExtArgs>>): Prisma.Prisma__ExternalCallClient<runtime.Types.Result.GetResult<Prisma.$ExternalCallPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more ExternalCalls.
   * @param {ExternalCallDeleteManyArgs} args - Arguments to filter ExternalCalls to delete.
   * @example
   * // Delete a few ExternalCalls
   * const { count } = await prisma.externalCall.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ExternalCallDeleteManyArgs>(args?: Prisma.SelectSubset<T, ExternalCallDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ExternalCalls.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ExternalCallUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many ExternalCalls
   * const externalCall = await prisma.externalCall.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ExternalCallUpdateManyArgs>(args: Prisma.SelectSubset<T, ExternalCallUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ExternalCalls and returns the data updated in the database.
   * @param {ExternalCallUpdateManyAndReturnArgs} args - Arguments to update many ExternalCalls.
   * @example
   * // Update many ExternalCalls
   * const externalCall = await prisma.externalCall.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more ExternalCalls and only return the `id`
   * const externalCallWithIdOnly = await prisma.externalCall.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ExternalCallUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ExternalCallUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ExternalCallPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one ExternalCall.
   * @param {ExternalCallUpsertArgs} args - Arguments to update or create a ExternalCall.
   * @example
   * // Update or create a ExternalCall
   * const externalCall = await prisma.externalCall.upsert({
   *   create: {
   *     // ... data to create a ExternalCall
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the ExternalCall we want to update
   *   }
   * })
   */
  upsert<T extends ExternalCallUpsertArgs>(args: Prisma.SelectSubset<T, ExternalCallUpsertArgs<ExtArgs>>): Prisma.Prisma__ExternalCallClient<runtime.Types.Result.GetResult<Prisma.$ExternalCallPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of ExternalCalls.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ExternalCallCountArgs} args - Arguments to filter ExternalCalls to count.
   * @example
   * // Count the number of ExternalCalls
   * const count = await prisma.externalCall.count({
   *   where: {
   *     // ... the filter for the ExternalCalls we want to count
   *   }
   * })
  **/
  count<T extends ExternalCallCountArgs>(
    args?: Prisma.Subset<T, ExternalCallCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ExternalCallCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a ExternalCall.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ExternalCallAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ExternalCallAggregateArgs>(args: Prisma.Subset<T, ExternalCallAggregateArgs>): Prisma.PrismaPromise<GetExternalCallAggregateType<T>>

  /**
   * Group by ExternalCall.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ExternalCallGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ExternalCallGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ExternalCallGroupByArgs['orderBy'] }
      : { orderBy?: ExternalCallGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ExternalCallGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetExternalCallGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the ExternalCall model
 */
readonly fields: ExternalCallFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for ExternalCall.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ExternalCallClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  Lift<T extends Prisma.ExternalCall$LiftArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ExternalCall$LiftArgs<ExtArgs>>): Prisma.Prisma__LiftClient<runtime.Types.Result.GetResult<Prisma.$LiftPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the ExternalCall model
 */
export interface ExternalCallFieldRefs {
  readonly id: Prisma.FieldRef<"ExternalCall", 'String'>
  readonly floor: Prisma.FieldRef<"ExternalCall", 'Int'>
  readonly direction: Prisma.FieldRef<"ExternalCall", 'Direction'>
  readonly liftId: Prisma.FieldRef<"ExternalCall", 'String'>
  readonly createdAt: Prisma.FieldRef<"ExternalCall", 'DateTime'>
}
    

// Custom InputTypes
/**
 * ExternalCall findUnique
 */
export type ExternalCallFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ExternalCall
   */
  select?: Prisma.ExternalCallSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ExternalCall
   */
  omit?: Prisma.ExternalCallOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ExternalCallInclude<ExtArgs> | null
  /**
   * Filter, which ExternalCall to fetch.
   */
  where: Prisma.ExternalCallWhereUniqueInput
}

/**
 * ExternalCall findUniqueOrThrow
 */
export type ExternalCallFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ExternalCall
   */
  select?: Prisma.ExternalCallSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ExternalCall
   */
  omit?: Prisma.ExternalCallOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ExternalCallInclude<ExtArgs> | null
  /**
   * Filter, which ExternalCall to fetch.
   */
  where: Prisma.ExternalCallWhereUniqueInput
}

/**
 * ExternalCall findFirst
 */
export type ExternalCallFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ExternalCall
   */
  select?: Prisma.ExternalCallSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ExternalCall
   */
  omit?: Prisma.ExternalCallOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ExternalCallInclude<ExtArgs> | null
  /**
   * Filter, which ExternalCall to fetch.
   */
  where?: Prisma.ExternalCallWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ExternalCalls to fetch.
   */
  orderBy?: Prisma.ExternalCallOrderByWithRelationInput | Prisma.ExternalCallOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ExternalCalls.
   */
  cursor?: Prisma.ExternalCallWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ExternalCalls from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ExternalCalls.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ExternalCalls.
   */
  distinct?: Prisma.ExternalCallScalarFieldEnum | Prisma.ExternalCallScalarFieldEnum[]
}

/**
 * ExternalCall findFirstOrThrow
 */
export type ExternalCallFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ExternalCall
   */
  select?: Prisma.ExternalCallSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ExternalCall
   */
  omit?: Prisma.ExternalCallOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ExternalCallInclude<ExtArgs> | null
  /**
   * Filter, which ExternalCall to fetch.
   */
  where?: Prisma.ExternalCallWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ExternalCalls to fetch.
   */
  orderBy?: Prisma.ExternalCallOrderByWithRelationInput | Prisma.ExternalCallOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ExternalCalls.
   */
  cursor?: Prisma.ExternalCallWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ExternalCalls from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ExternalCalls.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ExternalCalls.
   */
  distinct?: Prisma.ExternalCallScalarFieldEnum | Prisma.ExternalCallScalarFieldEnum[]
}

/**
 * ExternalCall findMany
 */
export type ExternalCallFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ExternalCall
   */
  select?: Prisma.ExternalCallSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ExternalCall
   */
  omit?: Prisma.ExternalCallOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ExternalCallInclude<ExtArgs> | null
  /**
   * Filter, which ExternalCalls to fetch.
   */
  where?: Prisma.ExternalCallWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ExternalCalls to fetch.
   */
  orderBy?: Prisma.ExternalCallOrderByWithRelationInput | Prisma.ExternalCallOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing ExternalCalls.
   */
  cursor?: Prisma.ExternalCallWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ExternalCalls from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ExternalCalls.
   */
  skip?: number
  distinct?: Prisma.ExternalCallScalarFieldEnum | Prisma.ExternalCallScalarFieldEnum[]
}

/**
 * ExternalCall create
 */
export type ExternalCallCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ExternalCall
   */
  select?: Prisma.ExternalCallSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ExternalCall
   */
  omit?: Prisma.ExternalCallOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ExternalCallInclude<ExtArgs> | null
  /**
   * The data needed to create a ExternalCall.
   */
  data: Prisma.XOR<Prisma.ExternalCallCreateInput, Prisma.ExternalCallUncheckedCreateInput>
}

/**
 * ExternalCall createMany
 */
export type ExternalCallCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many ExternalCalls.
   */
  data: Prisma.ExternalCallCreateManyInput | Prisma.ExternalCallCreateManyInput[]
}

/**
 * ExternalCall createManyAndReturn
 */
export type ExternalCallCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ExternalCall
   */
  select?: Prisma.ExternalCallSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ExternalCall
   */
  omit?: Prisma.ExternalCallOmit<ExtArgs> | null
  /**
   * The data used to create many ExternalCalls.
   */
  data: Prisma.ExternalCallCreateManyInput | Prisma.ExternalCallCreateManyInput[]
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ExternalCallIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * ExternalCall update
 */
export type ExternalCallUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ExternalCall
   */
  select?: Prisma.ExternalCallSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ExternalCall
   */
  omit?: Prisma.ExternalCallOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ExternalCallInclude<ExtArgs> | null
  /**
   * The data needed to update a ExternalCall.
   */
  data: Prisma.XOR<Prisma.ExternalCallUpdateInput, Prisma.ExternalCallUncheckedUpdateInput>
  /**
   * Choose, which ExternalCall to update.
   */
  where: Prisma.ExternalCallWhereUniqueInput
}

/**
 * ExternalCall updateMany
 */
export type ExternalCallUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update ExternalCalls.
   */
  data: Prisma.XOR<Prisma.ExternalCallUpdateManyMutationInput, Prisma.ExternalCallUncheckedUpdateManyInput>
  /**
   * Filter which ExternalCalls to update
   */
  where?: Prisma.ExternalCallWhereInput
  /**
   * Limit how many ExternalCalls to update.
   */
  limit?: number
}

/**
 * ExternalCall updateManyAndReturn
 */
export type ExternalCallUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ExternalCall
   */
  select?: Prisma.ExternalCallSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ExternalCall
   */
  omit?: Prisma.ExternalCallOmit<ExtArgs> | null
  /**
   * The data used to update ExternalCalls.
   */
  data: Prisma.XOR<Prisma.ExternalCallUpdateManyMutationInput, Prisma.ExternalCallUncheckedUpdateManyInput>
  /**
   * Filter which ExternalCalls to update
   */
  where?: Prisma.ExternalCallWhereInput
  /**
   * Limit how many ExternalCalls to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ExternalCallIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * ExternalCall upsert
 */
export type ExternalCallUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ExternalCall
   */
  select?: Prisma.ExternalCallSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ExternalCall
   */
  omit?: Prisma.ExternalCallOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ExternalCallInclude<ExtArgs> | null
  /**
   * The filter to search for the ExternalCall to update in case it exists.
   */
  where: Prisma.ExternalCallWhereUniqueInput
  /**
   * In case the ExternalCall found by the `where` argument doesn't exist, create a new ExternalCall with this data.
   */
  create: Prisma.XOR<Prisma.ExternalCallCreateInput, Prisma.ExternalCallUncheckedCreateInput>
  /**
   * In case the ExternalCall was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ExternalCallUpdateInput, Prisma.ExternalCallUncheckedUpdateInput>
}

/**
 * ExternalCall delete
 */
export type ExternalCallDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ExternalCall
   */
  select?: Prisma.ExternalCallSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ExternalCall
   */
  omit?: Prisma.ExternalCallOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ExternalCallInclude<ExtArgs> | null
  /**
   * Filter which ExternalCall to delete.
   */
  where: Prisma.ExternalCallWhereUniqueInput
}

/**
 * ExternalCall deleteMany
 */
export type ExternalCallDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ExternalCalls to delete
   */
  where?: Prisma.ExternalCallWhereInput
  /**
   * Limit how many ExternalCalls to delete.
   */
  limit?: number
}

/**
 * ExternalCall.Lift
 */
export type ExternalCall$LiftArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Lift
   */
  select?: Prisma.LiftSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Lift
   */
  omit?: Prisma.LiftOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LiftInclude<ExtArgs> | null
  where?: Prisma.LiftWhereInput
}

/**
 * ExternalCall without action
 */
export type ExternalCallDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ExternalCall
   */
  select?: Prisma.ExternalCallSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ExternalCall
   */
  omit?: Prisma.ExternalCallOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ExternalCallInclude<ExtArgs> | null
}
